{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["namereg","RegExp","urlreg","emailreg","validateForm","errors","valid","Object","values","forEach","val","length","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","preventDefault","_e$target","target","name","value","state","emailPI","test","namePI","title","funding","url","type","setState","defineProperty","handleSubmit","event","console","info","axios","post","posted_data","JSON","stringify","log","concat","alert","coPI","amount","reviewsubdate","propsubdate","comments","noofattempts","react_default","a","createElement","className","onSubmit","method","action","htmlFor","placeholder","onChange","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.779adfcb.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\nimport axios from 'axios';\nconst idreg = RegExp(/^[0-9]{3,}$/);\nconst namereg = RegExp(/^[A-Za-z ]{3,}$/);\nconst urlreg = RegExp(/^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/);\nconst emailreg = RegExp(/^[a-zA-Z0-9]{3,}@[a-zA-Z]{3,}[.]{1}[a-zA-Z]{2,}$/);\n\nconst validateForm = (errors) => {\n  let valid = true;\n  Object.values(errors).forEach(\n    (val) => val.length > 0 && (valid = false)\n  );\n  return valid;\n}\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      namePI : '',\n      emailPI:'',\n      title:'',\n      funding:'',\n      url:'',\n      type:'',\n      coPI:'',\n      amount:'',\n      reviewsubdate:'',\n      propsubdate:'',\n      comments:'',\n      noofattempts:'',\n      \n      errors: {\n      namePI : '',\n      emailPI:'',\n      title:'',\n      funding:'',\n      url:'',\n      type:'',\n      coPI:'',\n      amount:'',\n      reviewsubdate:'',\n      propsubdate:'',\n      comments:'',\n      noofattempts:''\n\n      }\n    }\n  }\n\n  async componentDidMount() {\n    // Load async data.\n    // Update state with new data.\n    // Re-render our component.\n   \n    \n\n  }\n  \n\n  handleChange = (e) => {\n    e.preventDefault();\n    const {name, value} = e.target;\n    let errors = this.state.errors;\n    switch (name) {\n        case 'emailPI':\n          errors.emailPI = emailreg.test(value) ? '':'enter correct email ID';\n          break;\n        case 'namePI':\n            errors.namePI= namereg.test(value)? '' : 'name should contain atleast 3 chars and only alphabets';\n            break;\n        case 'title' :\n            errors.title = namereg.test(value)?'':'name should contain atleast 3 chars and only alphabets';\n            break;\n        case 'funding' :\n            errors.funding = namereg.test(value)?'':'name should contain atleast 3 chars and only alphabets';\n            break;\n        case 'url':\n            errors.url = urlreg.test(value) ? '':'enter correct URL';\n            break;\n        case 'type':\n            errors.type = namereg.test(value) ? '':'enter correct ID';\n            break;\n\n\n        default:\n            break;\n\n    }\n    this.setState({errors,[name]:value});\n    //console.log(this.state);\n\n}\nhandleSubmit = (event) => {\n    //event.preventDefault();\n    if(validateForm(this.state.errors)) {\n        console.info('Valid Form',this.state);\n        try {\n          const response = (axios.post('http://localhost:4000', { posted_data: JSON.stringify(this.state) }));\n          //console.log(' Returned data:', response.then(result => {return result.data}));\n\n        } catch (e) {\n          console.log(` Axios request failed: ${e}`);\n        }\n        \n\n        \n    }else {\n        console.log('Invalid Form');\n        alert(\"please check the form correctly\")\n    }\n}\n\n\n\nrender () {\n  const {errors} = this.state;\n  return (\n    <div>\n      <header className=\"App-header\">\n        <h1>\n          Proposal Submission Form\n        </h1>\n       </header>\n       <body>\n         <form onSubmit={this.handleSubmit} className=\"form-style-2\" method=\"POST\" action=\"http://18.191.211.164:4000\">\n           <p>hi user, this is a dummy message. TQ</p>\n           <p><span className=\"required\">*</span>Required</p>\n           <div>\n           <label className=\"form-style-2 label\" htmlFor=\"namePI\">\n            1. Name of the PI in Amrita<span className=\"required\">*</span> <br/>\n            <input type=\"text\" name=\"namePI\" className=\"input-field\" value={this.state.value} placeholder=\"Enter your name here\" onChange={this.handleChange}></input>\n            {errors.namePI.length > 0 && \n                <span className='error'>{errors.namePI}</span>} \n           </label>\n           </div>\n\n           <div>\n           <label className=\"form-style-2 label\" htmlFor=\"emailPI\">\n            2. Email of the PI in Amrita <span className=\"required\">*</span><br/>\n            <input type=\"text\" name=\"emailPI\" className=\"input-field\" value={this.state.value} placeholder=\"Enter your email here\" onChange={this.handleChange}></input>\n            {errors.emailPI.length > 0 && \n                <span className='error'>{errors.emailPI}</span>} \n           </label>\n           </div>\n\n           <div>\n           <label className=\"form-style-2 label\" htmlFor=\"title\">\n            3. Title of the project <span className=\"required\">*</span> <br/>\n            <input type=\"text\" name=\"title\" className=\"input-field\" value={this.state.value} placeholder=\"Enter your answer here\" onChange={this.handleChange}></input>\n            {errors.title.length > 0 && \n                <span className='error'>{errors.title}</span>} \n           </label>\n           </div>\n\n           <div>\n           <label className=\"form-style-2 label\" htmlFor=\"funding\">\n            4. Funding Agency <span className=\"required\">*</span><br/>\n            <input type=\"text\" name=\"funding\" className=\"input-field\" value={this.state.value} placeholder=\"Enter your answer here\" onChange={this.handleChange}></input>\n            {errors.funding.length > 0 && \n                <span className='error'>{errors.funding}</span>} \n           </label>\n           </div>\n\n           <div>\n           <label className=\"form-style-2 label\" htmlFor=\"url\">\n            5. URL of the funding agency<span className=\"required\">*</span> <br/>\n            <input type=\"text\" name=\"url\" className=\"input-field\" value={this.state.value} placeholder=\"Enter your answer here\" onChange={this.handleChange}></input>\n            {errors.url.length > 0 && \n                <span className='error'>{errors.url}</span>} \n           </label>\n           </div>\n\n           <div>\n           <label className=\"form-style-2 label\" htmlFor=\"type\">\n            6. Type of CALL<span className=\"required\">*</span><br/>(international, Travel grant) <br/>\n            <input type=\"text\" name=\"type\" className=\"input-field\" value={this.state.value} placeholder=\"Enter your answer here\" onChange={this.handleChange}></input>\n            {errors.type.length > 0 && \n                <span className='error'>{errors.type}</span>} \n           </label>\n           </div>\n\n           <div>\n           <label className=\"form-style-2 label\" htmlFor=\"coPI\">\n            7.Co-PIs<span className=\"required\">*</span> <br/>\n            <input type=\"text\" name=\"coPI\" className=\"input-field\" value={this.state.value} placeholder=\"Enter your answer here\" onChange={this.handleChange}></input>\n            {errors.coPI.length > 0 && \n                <span className='error'>{errors.coPI}</span>} \n           </label>\n           </div>\n\n           <div>\n             <input type=\"submit\" className=\"submit\"></input>\n           </div>\n         </form>\n         </body>\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}